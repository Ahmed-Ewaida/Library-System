import 'package:flutter/cupertino.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:t1/features/Authontication/register/manager/register_cubit/register_state.dart';

import '../../data/model/register_model.dart';
import '../../data/repo/register_repo.dart';

class RegisterCubit extends Cubit<RegisterState> {
  RegisterCubit() : super(RegisterInitial());

  static RegisterCubit get(context) => BlocProvider.of(context);
  TextEditingController nameController = TextEditingController();
  TextEditingController ConfirmPasswordController = TextEditingController();
  TextEditingController passwordController = TextEditingController();
  TextEditingController emailController = TextEditingController();
  TextEditingController phoneController = TextEditingController();
  TextEditingController fullnameController = TextEditingController();
  TextEditingController universityCodeController = TextEditingController();
  TextEditingController levelController = TextEditingController(); // ðŸ’¡ Ù‚Ø¯ Ù„Ø§ ØªØ­ØªØ§Ø¬ Ø¥Ù„ÙŠÙ‡ Ø¥Ø°Ø§ ÙƒÙ†Øª ØªØ³ØªØ®Ø¯Ù… selectedYear Ù„Ù„Ù…Ø³ØªÙˆÙ‰
  TextEditingController departmentController = TextEditingController();
  int? selectedYear; // ðŸ’¡ Ù‡Ø°Ø§ Ù‡Ùˆ Ø§Ù„Ø°ÙŠ Ø³ÙŠÙ…Ø«Ù„ Ø§Ù„Ù…Ø³ØªÙˆÙ‰ (level)

  void updateSelectedYear(String? year) {
    // Map Arabic year strings to integer values
    switch (year) {
      case "Ø§Ù„Ø£ÙˆÙ„Ù‰":
        selectedYear = 1;
        break;
      case "Ø§Ù„Ø«Ø§Ù†ÙŠØ©":
        selectedYear = 2;
        break;
      case "Ø§Ù„Ø«Ø§Ù„Ø«Ø©":
        selectedYear = 3;
        break;
      case "Ø§Ù„Ø±Ø§Ø¨Ø¹Ø©":
        selectedYear = 4;
        break;
      default:
        selectedYear = null;
    }
  }

  AuthRepo authRepo = AuthRepo.getinstance();

  void register(RegisterUserModel u) async {
    emit(RegisterLoading());
    var response =await authRepo.register(
      passwordConfirmation: ConfirmPasswordController.text,
      universityCode: universityCodeController.text,
      level: selectedYear ?? 0, // âœ… Ù‡Ø°Ø§ Ø³ÙŠØªÙ… Ø¥Ø±Ø³Ø§Ù„Ù‡ ÙƒÙ€ level
      department: departmentController.text,
      email: emailController.text,
      phone: phoneController.text,
      fullname: fullnameController.text,
      username: nameController.text,
      password: passwordController.text,
      selectedYear: selectedYear, // âœ… Ù‡Ø°Ø§ Ù„Ù† ÙŠØªÙ… Ø¥Ø±Ø³Ø§Ù„Ù‡ Ù„Ù„Ø¨Ø§Ùƒ Ø¥Ù†Ø¯ Ø§Ù„Ø¢Ù†
    );
    response.fold(
          (l) {
        emit(RegisterError(message: l));
      },
          (r) {
        emit(RegisterSuccess(message: r));
      },
    );
  }
}